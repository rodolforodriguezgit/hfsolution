# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mi_base
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mi_red

  backend:
    build: ./backend
    container_name: node_backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mi_base
      - DB_PORT=5432
      - CHOKIDAR_USEPOLLING=true  # ✅ Para hot-reload
    volumes:
      - ./backend:/app  # ✅ Montar código fuente
      - /app/node_modules  # ✅ Evitar sobreescribir node_modules
    depends_on:
      - postgres
    networks:
      - mi_red

  frontend:
    build: ./frontend
    container_name: react_frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true  # ✅ Para hot-reload en React
      - WATCHPACK_POLLING=true    # ✅ Polling adicional
      - FAST_REFRESH=true         # ✅ Fast refresh de React
    volumes:
      - ./frontend:/app  # ✅ Montar todo el código fuente
      - /app/node_modules  # ✅ Node_modules del contenedor
    depends_on:
      - backend
    networks:
      - mi_red
    stdin_open: true  # ✅ Para React hot-reload
    tty: true         # ✅ Para React hot-reload

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_dashboard
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@hfsolucion.com
      PGADMIN_DEFAULT_PASSWORD: supersecret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - mi_red

volumes:
  postgres_data:

networks:
  mi_red: